name: CPM CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]
        include:
          - os: ubuntu-latest
            compiler: gcc
            cc: gcc
            cxx: g++
          - os: ubuntu-latest
            compiler: clang
            cc: clang
            cxx: clang++
          - os: macos-latest
            compiler: gcc
            cc: gcc-11
            cxx: g++-11
          - os: macos-latest
            compiler: clang
            cc: clang
            cxx: clang++

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libcjson-dev libpmem-dev libpmemobj-dev
        
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install cmake cjson pmdk

    - name: Configure CMake
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Debug

    - name: Build
      run: cmake --build build --config Debug

    - name: Test
      working-directory: build
      run: ctest --output-on-failure

    - name: Install
      run: sudo cmake --install build

    - name: Test Installation
      run: |
        cpm --help
        cpm --version

  static-analysis:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install static analysis tools
      run: |
        sudo apt-get update
        sudo apt-get install -y cppcheck clang-tidy
        
    - name: Run cppcheck
      run: |
        cppcheck --enable=all --error-exitcode=1 --suppress=missingIncludeSystem lib/ include/
        
    - name: Run clang-tidy
      run: |
        clang-tidy lib/**/*.c -- -Iinclude